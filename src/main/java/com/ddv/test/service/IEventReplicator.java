package com.ddv.test.service;

/**
 * IEventReplicator must be implemented by classes dedicated to the replication
 * of events generated this application instances to other running instances 
 * of that application. This case happens in distributed environments where 
 * multiple instances of the application are running at the same time to avoid
 * service down times. The classes that implements this interface will also be
 * responsible to inform this application instance of the events generated by
 * the other running instances.
 */
public interface IEventReplicator {

	/**
	 * Inform the other running application instance about an event generated
	 * by this instance.
	 * @param anId The unique identifier assigned to the event.
	 * @param anEvent Non-null event.
	 */
	public void emitEvent(int anId, TxnSseEvent anEvent);
	
	/**
	 * Subscribe to be informed of the events generated by the other running
	 * application instances.
	 * @param aCallback Non-null callback that will receive the notifications.
	 */
	public void subscribe(EventDeliveryCallback aCallback);
	
	/**
	 * Callback that will be called each time an external running application 
	 * instance has generated an event. 
	 *
	 */
	public static interface EventDeliveryCallback {
		/**
		 * Method called each time an external running application instance has
		 * generated an event.
		 * @param anId The unique identifier assigned to the event.
		 * @param anEvent Non-null event.
		 */
		public void onEvent(int anId, TxnSseEvent anEvent);
	}
}
